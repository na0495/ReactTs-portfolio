{"version":3,"sources":["theme/ThemeProvider.tsx","components/SwitchMode.tsx","components/Animations/Type.js","components/Home/Hero.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ThemeDispatchContext","React","createContext","ThemeProvider","children","theme","useReducer","state","action","type","paletteType","payload","Error","themeOptions","dispatch","memoizedTheme","useMemo","createMuiTheme","palette","Provider","value","SwitchMode","useTheme","changeTheme","useContext","useCallback","useChangeTheme","Box","style","position","top","textAlign","zIndex","IconButton","title","onClick","Type","options","strings","autoStart","loop","deleteSpeed","useStyles","makeStyles","color","Hero","classes","sx","height","window","innerHeight","py","px","Typography","variant","gutterBottom","className","App","CssBaseline","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAcMA,EAAuBC,IAAMC,cAAmB,MAsCvCC,EApCqC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAM/D,EAAiCJ,IAAMK,YAAW,SAACC,EAAYC,GAC7D,OAAQA,EAAOC,MACb,IAAK,cACH,OAAO,2BACFF,GADL,IAEEG,YAAaF,EAAOG,UAExB,QACE,MAAM,IAAIC,SAZY,CAC1BF,YAAa,UAGf,mBAAOG,EAAP,KAAqBC,EAArB,KAYMC,EAAgBd,IAAMe,SAAQ,WAClC,OAAOC,YAAe,2BACjBZ,GADgB,IAEnBa,QAAS,CACPT,KAAMI,EAAaH,kBAGtB,CAACL,EAAMQ,EAAaH,cAEvB,OACE,cAAC,IAAD,CAAkBL,MAAOU,EAAzB,SACE,cAACf,EAAqBmB,SAAtB,CAA+BC,MAAON,EAAtC,SACGV,O,qEC1BMiB,EAZc,WAC3B,IAAMhB,EAAQiB,MACRC,ED4CsB,WAC5B,IAAMT,EAAWb,IAAMuB,WAAWxB,GAC5BK,EAAQiB,cAQd,OAPoBrB,IAAMwB,aAAY,kBACpCX,EAAS,CACPL,KAAM,cACNE,QAAgC,UAAvBN,EAAMa,QAAQT,KAAmB,OAAS,YAEvD,CAACJ,EAAMa,QAAQT,KAAMK,ICpDDY,GACpB,OACE,cAACC,EAAA,EAAD,CAAKC,MAAO,CAACC,SAAU,iBAAkBC,IAAK,IAAKC,UAAW,QAASC,OAAQ,GAA/E,SACE,cAACC,EAAA,EAAD,CAAYC,MAAM,yBAAyBC,QAAS,kBAAIZ,KAAxD,SAC0B,UAAvBlB,EAAMa,QAAQT,KAAmB,cAAC,IAAD,IAAsB,cAAC,IAAD,S,mCCKjD2B,MAjBf,WACE,OACE,cAAC,IAAD,CACEC,QAAS,CACPC,QAAS,CACP,qBACA,uBACA,2BAEFC,WAAW,EACXC,MAAM,EACNC,YAAa,OCLfC,G,OAAYC,YAAW,CACzBlC,KAAM,CACFmC,MAAO,aAIA,SAASC,IACtB,IAAMC,EAAUJ,IAEhB,OACE,cAACf,EAAA,EAAD,CAAKoB,GAAI,CAAEC,OAAQC,OAAOC,YAAc,KAAxC,SACE,eAACvB,EAAA,EAAD,CAAKoB,GAAI,CAAEI,GAAI,GAAIC,GAAI,EAAGrB,UAAW,UAArC,UACE,eAACsB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,cAAY,EAArC,yBACc,sBAAMC,UAAU,cAAhB,6BAEd,cAACH,EAAA,EAAD,CAAYC,QAAQ,KAAKE,UAAWV,EAAQrC,KAA5C,SACE,cAAC,EAAD,W,aCDKgD,MAhBf,WACE,IAAMpD,EAAQY,YAAe,CAC3BC,QAAS,CACPT,KAAM,WAIV,OACE,eAAC,EAAD,CAAeJ,MAAOA,EAAtB,UACE,cAACqD,EAAA,EAAD,IACA,cAAC,EAAD,IACA,cAACb,EAAD,QCJSc,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.9e95ba9f.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n  createMuiTheme,\r\n  ThemeProvider as MuiThemeProvider,\r\n  Theme\r\n} from '@material-ui/core/styles';\r\n\r\nimport { useTheme } from '@material-ui/core/styles';\r\n\r\ninterface ThemeProviderProps {\r\n  children: React.ReactNode\r\n  theme: Theme\r\n}\r\n\r\nconst ThemeDispatchContext = React.createContext<any>(null);\r\n\r\nconst ThemeProvider: React.FC<ThemeProviderProps> = ({ children, theme }) => {\r\n\r\n  const themeInitialOptions = {\r\n    paletteType: 'light'\r\n  }\r\n\r\n  const [themeOptions, dispatch] = React.useReducer((state: any, action: any)=> {\r\n    switch (action.type) {\r\n      case 'changeTheme':\r\n        return {\r\n          ...state,\r\n          paletteType: action.payload\r\n        }\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }, themeInitialOptions);\r\n\r\n  const memoizedTheme = React.useMemo(()=>{\r\n    return createMuiTheme({\r\n      ...theme,\r\n      palette: {\r\n        type: themeOptions.paletteType\r\n      }\r\n    })\r\n  }, [theme,themeOptions.paletteType]);\r\n\r\n  return (\r\n    <MuiThemeProvider theme={memoizedTheme}>\r\n      <ThemeDispatchContext.Provider value={dispatch}>\r\n        {children}\r\n      </ThemeDispatchContext.Provider>\r\n    </MuiThemeProvider>\r\n  )\r\n}\r\n\r\nexport default ThemeProvider\r\n\r\nexport const useChangeTheme = () => {\r\n  const dispatch = React.useContext(ThemeDispatchContext);\r\n  const theme = useTheme();\r\n  const changeTheme = React.useCallback(()=>\r\n    dispatch({\r\n      type: 'changeTheme',\r\n      payload: theme.palette.type === 'light' ? 'dark' : 'light'\r\n    }),\r\n  [theme.palette.type, dispatch]);\r\n\r\n  return changeTheme;\r\n}","import React from 'react';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Brightness4Icon from '@material-ui/icons/Brightness4';\r\nimport Brightness7Icon from '@material-ui/icons/Brightness7';\r\nimport { useChangeTheme } from '../theme/ThemeProvider';\r\nimport useTheme from '@material-ui/core/styles/useTheme';\r\nimport { Box } from '@material-ui/core';\r\n\r\nconst SwitchMode: React.FC = ()=>{\r\n  const theme = useTheme();\r\n  const changeTheme = useChangeTheme();\r\n  return (\r\n    <Box style={{position: '-webkit-sticky', top: '0', textAlign: 'right', zIndex: 3 }}>\r\n      <IconButton title=\"Toggle light/dark mode\" onClick={()=>changeTheme()}>\r\n        {theme.palette.type === 'light' ? <Brightness4Icon /> : <Brightness7Icon />}\r\n      </IconButton>\r\n    </Box>\r\n  )\r\n}\r\n\r\nexport default SwitchMode;","import Typewriter from \"typewriter-effect\";\r\n\r\nfunction Type() {\r\n  return (\r\n    <Typewriter\r\n      options={{\r\n        strings: [\r\n          \"Software Developer\",\r\n          \"Full Stack Developer\",\r\n          \"Open Source Contributor\",\r\n        ],\r\n        autoStart: true,\r\n        loop: true,\r\n        deleteSpeed: 50,\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Type;\r\n","// eslint-disable-next-line \r\nimport { Box, Typography, IconButton} from '@material-ui/core';\r\n// eslint-disable-next-line \r\nimport { AnimatePresence, motion } from 'framer-motion';\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Type from '../Animations/Type';\r\nimport '../styles/icon.css';\r\n\r\nconst useStyles = makeStyles({\r\n    type: {\r\n        color: 'orange'\r\n    },\r\n  });\r\n\r\nexport default function Hero() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Box sx={{ height: window.innerHeight - 140}}>\r\n      <Box sx={{ py: 10, px: 3, textAlign: 'center'}} >\r\n        <Typography variant=\"h2\" gutterBottom>\r\n          Hello There <span className=\"waving-hand\">&#128075;</span>\r\n        </Typography>\r\n        <Typography variant=\"h4\" className={classes.type}>\r\n          <Type/>   \r\n        </Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\n","import React from 'react';\nimport ThemeProvider from './theme/ThemeProvider';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport SwitchMode from './components/SwitchMode';\nimport Hero from './components/Home/Hero';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nfunction App() {\n  const theme = createMuiTheme({\n    palette: {\n      type: 'light'\n    }\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline/>\n      <SwitchMode/>\n      <Hero/>\n    </ThemeProvider>\n  );\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}